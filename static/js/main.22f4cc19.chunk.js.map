{"version":3,"sources":["Components/Recipie.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Recipie","title","calories","image","ingredients","classes","useState","expanded","setExpanded","Card","className","CardHeader","subheader","CardMedia","CardContent","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","map","ingredient","Typography","paragraph","text","padding","display","alignItems","width","input","spacing","flex","iconButton","App","food","setFood","recipies","setRecipies","query","setQuery","useEffect","console","log","getRecipie","a","axios","get","response","data","hits","Paper","component","onSubmit","event","preventDefault","InputBase","value","onChange","target","placeholder","inputProps","type","Grid","container","recipie","item","xs","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22f4cc19.chunk.js","sourcesContent":["import react, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 20,\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  }\n}));\n\nconst Recipie = ({ title, calories, image, ingredients }) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardHeader\n          title={title}\n          subheader={calories}\n        />\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title={title}\n        />\n        <CardContent>\n        </CardContent>\n        <CardActions disableSpacing>\n          <div>Ingredients</div>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            {\n              ingredients.map((ingredient) => {\n                return <Typography paragraph>{ingredient.text}</Typography>;\n              })\n            }\n          </CardContent>\n        </Collapse>\n      </Card>\n    </div>\n  )\n}\n\nexport default Recipie;","import './App.css';\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react';\nimport Recipie from './Components/Recipie';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    margin: '10px auto',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [food, setFood] = useState('cake');\n  const [recipies, setRecipies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const APP_ID = \"c2c05ffe\", APP_KEY = \"353dc6ddbaf37029ab769848aeb49d5d\";\n\n  useEffect(() => {\n    console.log('something happened');\n    getRecipie();\n  }, [query]);\n\n  const getRecipie = async () => {\n    const response = await axios.get(`https://api.edamam.com/search?q=${food}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    console.log(response.data.hits);\n    setRecipies(response.data.hits);\n  }\n\n  const updateFood = (event) => {\n    setFood(event.target.value);\n  }\n\n  const updateQuery = (event) => {\n    event.preventDefault();\n    setQuery(food);\n  }\n\n  return (\n    <div className=\"App\">\n      <Paper component=\"form\" className={classes.root} onSubmit={updateQuery}>\n        <InputBase\n          value={food}\n          onChange={updateFood}\n          className={classes.input}\n          placeholder=\"Search Recipie\"\n          inputProps={{ 'aria-label': 'search recipie' }}\n        />\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n      <Grid container>\n        {\n          recipies.map((recipie) => (\n            <Grid item xs={3}>\n              <Recipie title={recipie.recipe.label} calories={recipie.recipe.calories}\n                image={recipie.recipe.image} ingredients={recipie.recipe.ingredients} />\n            </Grid>\n          ))\n        }\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}